{% extends 'base.html' %}
{% load i18n %}
{% load static tailwind_tags %}
{% block title %}
BookWeaver — {% trans "원서를, 당신의 언어로" %}
{% endblock %}

{% block content %}
<div class="flex items-center justify-center min-h-screen-minus-nav-footer p-4">
    <div class="bg-white p-8 rounded-xl shadow-2xl w-full max-w-xl mx-auto">
        <h1 class="text-3xl font-bold text-center text-gray-800 mb-6">{% trans "언어의 장벽 없이, 새로운 이야기를 만나다" %}</h1>
        <p class="text-sm text-center text-gray-500 mb-8">
            익숙하지 않은 언어의 책도 이제 걱정 없이 펼치세요.<br>
            파일의 원본 레이아웃과 서식을 그대로 살려 번역해 드립니다.
        </p>
        <form id="uploadForm" class="space-y-6">
            {% csrf_token %}
            <div class="flex flex-col space-y-2">
                <label for="fileInput" class="text-gray-700 font-medium">파일 선택</label>
                <input type="file" id="fileInput" name="file" accept=".pdf, .png, .jpeg, .jpg" required
                       class="block w-full text-sm text-gray-500
                              file:mr-4 file:py-2 file:px-4
                              file:rounded-full file:border-0
                              file:text-sm file:font-semibold
                              file:bg-blue-50 file:text-blue-700
                              hover:file:bg-blue-100 cursor-pointer">
            </div>

            <div class="flex flex-col space-y-2">
                <label for="titleInput" class="text-gray-700 font-medium">책 제목 (선택)</label>
                <input type="text" id="titleInput" name="title"
                       class="px-4 py-2 text-gray-700 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500"
                       placeholder="입력하지 않으면 파일명이 제목으로 사용됩니다.">
            </div>
            
            <div class="flex flex-col space-y-2">
                <div class="flex items-center space-x-2">
                    <label for="genreSelect" class="text-gray-700 font-medium">장르 (선택)</label>
                    <div class="relative group cursor-pointer">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                          <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                        </svg>
                        <div class="absolute bottom-full left-1/2 -translate-x-1/2 mb-2 w-64 bg-gray-800 text-white text-xs rounded py-2 px-3 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none z-10">
                            정확한 genre를 입력하면 AI가 번역본을 제작하는데 도움이 됩니다.
                            <svg class="absolute text-gray-800 h-2 w-full left-0 top-full" x="0px" y="0px" viewBox="0 0 255 255" xml:space="preserve"><polygon class="fill-current" points="0,0 127.5,127.5 255,0"/></svg>
                        </div>
                    </div>
                </div>
                <select id="genreSelect" name="genre"
                        class="block w-full px-4 py-2 text-gray-700 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                    <option value="">장르를 선택하세요 (선택 사항)</option>
                    <option value="fiction">소설</option>
                    <option value="non-fiction">비소설</option>
                    <option value="technical">기술/과학</option>
                    <option value="history">역사</option>
                    <option value="self-help">자기계발</option>
                    <option value="fantasy">판타지</option>
                    <option value="science-fiction">SF (공상 과학)</option>
                    <option value="romance">로맨스</option>
                    <option value="thriller">스릴러/미스터리</option>
                    <option value="children">아동</option>
                    <option value="other">기타</option>
                </select>
            </div>

            <div class="flex flex-col space-y-2">
                <label for="languageSelect" class="text-gray-700 font-medium">번역할 언어</label>
                <select id="languageSelect" name="target_language" required
                        class="block w-full px-4 py-2 text-gray-700 bg-gray-50 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                    <option value="ko">한국어</option>
                    <option value="en">English</option>
                    <option value="es">Español</option>
                    <option value="ja">日本語</option>
                    <option value="fr">Français</option>
                </select>
            </div>

            <button type="submit" id="submitButton"
                    class="w-full px-4 py-2 text-lg font-bold text-white bg-blue-600 rounded-md
                           hover:bg-blue-700 transition duration-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
                파일 업로드
            </button>
        </form>
        <div id="message" class="mt-8 text-center"></div>
    </div>
</div>
{% endblock %}

{% block extra_js %}
<script>
    const form = document.getElementById('uploadForm');
    const submitButton = document.getElementById('submitButton');
    const messageDiv = document.getElementById('message');
    
    function getCookie(name) {
        let cookieValue = null;
        if (document.cookie && document.cookie !== '') {
            const cookies = document.cookie.split(';');
            for (let i = 0; i < cookies.length; i++) {
                const cookie = cookies[i].trim();
                if (cookie.startsWith(name + '=')) {
                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                    break;
                }
            }
        }
        return cookieValue;
    }
    const csrftoken = getCookie('csrftoken');

    form.addEventListener('submit', async (e) => {
        e.preventDefault();

        const fileInput = document.getElementById('fileInput');
        if (!fileInput.files || fileInput.files.length === 0) {
            messageDiv.textContent = '파일을 선택해주세요.';
            messageDiv.className = 'text-red-500';
            return;
        }

        const formData = new FormData(form);
        
        submitButton.disabled = true;
        submitButton.classList.add('bg-blue-400', 'cursor-not-allowed');
        submitButton.classList.remove('bg-blue-600', 'hover:bg-blue-700');
        
        messageDiv.innerHTML = '<div class="flex justify-center items-center"><div class="animate-spin rounded-full h-5 w-5 border-b-2 border-blue-600"></div><span class="ml-3 text-blue-600"> 업로드 중... 잠시만 기다려주세요.</span></div>';

        try {
            const response = await fetch('/upload/', {
                method: 'POST',
                body: formData,
                headers: {
                    'X-CSRFToken': csrftoken,
                },
            });

            const data = await response.json();

            if (response.ok) {
                messageDiv.innerHTML = `<span class="text-green-600">${data.message}</span>`;
                if (data.prepare_url) {
                    window.location.href = data.prepare_url;
                }
            } else {
                if (response.status === 403 && data.detail === "Authentication credentials were not provided.") {
                    messageDiv.innerHTML = `<span class="text-red-600">로그인이 필요합니다. <a href="{% url 'mybook:login_page' %}" class="underline">로그인 페이지로 이동</a></span>`;
                } else {
                    messageDiv.innerHTML = `<span class="text-red-600">오류: ${data.error || JSON.stringify(data)}</span>`;
                }
            }
        } catch (error) {
            messageDiv.innerHTML = '<span class="text-red-600">네트워크 오류가 발생했습니다.</span>';
            console.error('Error:', error);
        } finally {
            submitButton.disabled = false;
            submitButton.classList.remove('bg-blue-400', 'cursor-not-allowed');
            submitButton.classList.add('bg-blue-600', 'hover:bg-blue-700');
        }
    });
</script>
{% endblock %}

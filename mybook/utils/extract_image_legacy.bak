### 이전에 사용하던 참고용 함수: collect_images()

# def collect_images(page: fitz.Page, doc: fitz.Document, out_dir: str, media_root: str):
#     infos = page.get_image_info(xrefs=True) # type:ignore
#     occ = []
#     saved = {}
#     for order, info in enumerate(infos):
#         xref = info.get("xref")
#         if not xref:
#             continue
#         tr = info.get("transform") or [1,0,0,1,0,0]
#         bbox = info.get("bbox")     # [x0,y0,x1,y1] (pt)
#         origin_image_w = int(info["width"])  # original image width (int)
#         origin_image_h = int(info["height"]) # original image height (int)

#         # xref 파일 저장(한 번만)
#         if xref not in saved:
#             raw = doc.extract_image(xref)
#             ext = raw.get("ext","png")
#             p = Path(out_dir) / f"xref_{xref}.{ext}"
#             if not p.exists():
#                 p.write_bytes(raw["image"])
#             rel = os.path.relpath(str(p), media_root).replace("\\","/")
#             saved[xref] = {
#                 "path": rel,
#                 "img_w": int(raw.get("width") or 1), #서버에 저장된 이미지의 해상도 px
#                 "img_h": int(raw.get("height") or 1),
#             }

#         meta = saved[xref]
#         occ.append({
#             "order": order,
#             "xref": int(xref),
#             "transform_pt": list(tr), # pt
#             "bbox_pt": [bbox[0], bbox[1], bbox[2], bbox[3]],  # xyxy (pt)
#             "path": meta["path"],
#             "img_w": meta["img_w"], #px
#             "img_h": meta["img_h"], #px
#             "origin_w": origin_image_w, #px
#             "origin_h": origin_image_h, #px
#         })
#     return occ
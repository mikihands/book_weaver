from django.conf import settings
import os
import httpx
from google import genai
from google.genai import types
import pathlib

# 환경 변수에서 API 키를 불러옵니다.
GEMINI_API_KEY = settings.GEMINI_API_KEY

MAX_INLINE_UPLOAD_SIZE = 20 * 1024 * 1024  # 20MB

class GeminiHelper:
    def __init__(self):
        self.client = genai.Client(api_key=GEMINI_API_KEY)

    def _upload_large_file(self, file_path):
        """File API를 사용하여 대용량 파일을 업로드합니다."""
        with open(file_path, 'rb') as f:
            uploaded_file = self.client.files.upload(file=f)
        return uploaded_file

    def process_and_translate_document(self, file_path: str, target_language: str):
        """
        파일을 처리하고 번역 요청을 보냅니다.
        파일 크기에 따라 인라인 또는 파일 API 방식을 선택합니다.
        """
        file_size = os.path.getsize(file_path)
        
        contents = []
        if file_size < MAX_INLINE_UPLOAD_SIZE:
            # 저용량 파일: 인라인으로 PDF 데이터 전달
            with open(file_path, 'rb') as f:
                pdf_data = f.read()
            
            contents.append(
                genai.types.Part.from_bytes(
                    data=pdf_data,
                    mime_type='application/pdf'
                )
            )
        else:
            # 대용량 파일: File API 사용
            uploaded_file = self._upload_large_file(file_path)
            contents.append(uploaded_file)
            
        # 번역 프롬프트 추가
        prompt = (
            f"Translate this document to {target_language} and return it as a complete HTML document, preserving the original layout and formatting."
            "Ensure all content, including tables, lists, and images, is properly converted into HTML."
            "마크다운의 코드펜스 (```html)를 답변에 포함시키지 마세요. 오직 HTML 코드만 반환하세요."
        )
        contents.append(prompt)
        
        # API 요청
        try:
            response = self.client.models.generate_content(
                model="gemini-2.5-flash",
                contents=contents
            )
            return response.text
        except Exception as e:
            print(f"API 호출 중 오류 발생: {e}")
            return None